# python build stubs for package game
# File is generated by gopy. Do not edit.
# gopy pkg -exclude=model,ml1,ml2,moveml ../../internal/game ../../internal/bot context encoding/json

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_game')
mod.add_include('"game_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Array_4_Ptr_game_Skill_CTor', retval('int64_t'), [])
mod.add_function('Array_4_Ptr_game_Skill_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_4_Ptr_game_Skill_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_4_Ptr_game_Skill_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Array_4_Ptr_game_SkillData_CTor', retval('int64_t'), [])
mod.add_function('Array_4_Ptr_game_SkillData_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_4_Ptr_game_SkillData_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_4_Ptr_game_SkillData_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_game_Colour_CTor', retval('int64_t'), [])
mod.add_function('Slice_game_Colour_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_game_Colour_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_game_Colour_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_game_Colour_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_game_Colour_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_game_Effect_CTor', retval('int64_t'), [])
mod.add_function('Slice_game_Effect_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_game_Effect_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_game_Effect_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_game_Effect_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_game_Effect_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_game_Colour_int_CTor', retval('int64_t'), [])
mod.add_function('Map_game_Colour_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_game_Colour_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_game_Colour_int_contains', retval('bool'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_game_Colour_int_set', None, [param('int64_t', 'handle'), param('int64_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_game_Colour_int_delete', None, [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_game_Colour_int_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_function(mod, 'game_DealtDamageModifier_ModifyDealtDamage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'game_EffectFilter_IsEffectAllowed', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'e')])
add_checked_function(mod, 'game_HealFilter_IsHealAllowed', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'heal')])
add_checked_function(mod, 'game_SkillUnlockTurnModifier_ModifySkillUnlockTurn', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 's'), param('int64_t', 'unlockTurn')])
add_checked_function(mod, 'game_SkillAvailabilityFilter_IsSkillAvailable', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 's')])
add_checked_function(mod, 'game_SkillsPerTurnHandler_SkillsPerTurn', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_TakenDamageModifier_ModifyTakenDamage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'game_TurnEndHandler_OnTurnEnd', None, [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('bool', 'goRun')])
add_checked_function(mod, 'game_ControlHandler_HasTakenControl', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_DefenceModifier_ModifyDefences', None, [param('int64_t', '_handle'), param('int64_t', 'mydef'), param('bool', 'goRun')])
add_checked_function(mod, 'game_Effect_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Effect_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Expirable_HasExpired', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
mod.add_function('game_EffectDescription_CTor', retval('int64_t'), [])
mod.add_function('game_EffectDescription_Name_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('game_EffectDescription_Name_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('game_EffectDescription_Type_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('game_EffectDescription_Type_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('game_Skill_CTor', retval('int64_t'), [])
add_checked_function(mod, 'game_Skill_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Skill_Cooldown', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Skill_UnlockTurn', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'c')])
add_checked_function(mod, 'game_Skill_IsAvailable', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState')])
add_checked_function(mod, 'game_Skill_Use', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState')])
add_checked_function(mod, 'game_Skill_IsAppropriate', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState')])
mod.add_function('game_SkillData_CTor', retval('int64_t'), [])
mod.add_function('game_SkillData_Desc_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_SkillData_Desc_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_SkillData_Cooldown_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_SkillData_Cooldown_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_SkillData_UnlockTurn_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_SkillData_UnlockTurn_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_SkillDescription_CTor', retval('int64_t'), [])
mod.add_function('game_SkillDescription_Name_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('game_SkillDescription_Name_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('game_SkillDescription_Colour_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_SkillDescription_Colour_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_SkillDescription_IsUltimate_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('game_SkillDescription_IsUltimate_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('game_TurnState_CTor', retval('int64_t'), [])
mod.add_function('game_TurnState_TurnNum_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_TurnState_TurnNum_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_TurnState_IsGoingFirst_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('game_TurnState_IsGoingFirst_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('game_TurnState_IsTurnEnd_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('game_TurnState_IsTurnEnd_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
add_checked_function(mod, 'game_TurnState_WithGoingFirst', retval('int64_t'), [param('int64_t', '_handle'), param('bool', 'isGoingFirst')])
add_checked_function(mod, 'game_TurnState_WithTurnEnd', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_TurnState_IsAfter', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'other')])
add_checked_function(mod, 'game_TurnState_AddTurns', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'turns'), param('bool', 'isOpponentsTurn')])
add_checked_function(mod, 'game_TurnState_Next', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('game_Character_CTor', retval('int64_t'), [])
add_checked_function(mod, 'game_Character_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_HP', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_MaxHP', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_Defences', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_Effects', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_Skills', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_LastUsedSkill', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_IsControlledByOpp', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_SkillsPerTurn', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_SetMaxHP', None, [param('int64_t', '_handle'), param('int64_t', 'maxHP'), param('bool', 'goRun')])
add_checked_function(mod, 'game_Character_AddEffect', None, [param('int64_t', '_handle'), param('int64_t', 'eff'), param('bool', 'goRun')])
add_checked_function(mod, 'game_Character_Damage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'opp'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'game_Character_Kill', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'game_Character_CanHeal', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'heal')])
add_checked_function(mod, 'game_Character_Heal', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'heal')])
add_checked_function(mod, 'game_Character_OnTurnEnd', None, [param('int64_t', '_handle'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('bool', 'goRun')])
add_checked_function(mod, 'game_Character_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'game_Character_CloneWithSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'i')])
add_checked_function(mod, 'game_Character_CloneWithoutSkills', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('game_CharacterData_CTor', retval('int64_t'), [])
mod.add_function('game_CharacterData_SkillData_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterData_Desc_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterData_Desc_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_CharacterData_DefaultHP_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterData_DefaultHP_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_CharacterData_Defences_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterData_Defences_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('game_CharacterDescription_CTor', retval('int64_t'), [])
mod.add_function('game_CharacterDescription_Name_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterDescription_Name_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('game_CharacterDescription_Number_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('game_CharacterDescription_Number_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'game_NewSkill', retval('int64_t'), [param('int64_t', 'data')])
add_checked_function(mod, 'game_StartTurnState', retval('int64_t'), [])
add_checked_function(mod, 'game_NewTurnState', retval('int64_t'), [param('int64_t', 'turnNum')])
add_checked_function(mod, 'game_NewCharacter', retval('int64_t'), [param('int64_t', 'data')])
mod.add_function('characters_Hmm', retval('int64_t'), [])
mod.add_function('characters_Set_Hmm', None, [param('int64_t', 'val')])
mod.add_function('euphoria_CharacterEuphoria', retval('int64_t'), [])
mod.add_function('euphoria_Set_CharacterEuphoria', None, [param('int64_t', 'val')])
mod.add_function('euphoria_EffectDescEuphoricHeal', retval('int64_t'), [])
mod.add_function('euphoria_Set_EffectDescEuphoricHeal', None, [param('int64_t', 'val')])
mod.add_function('euphoria_EffectDescEuphoricSource', retval('int64_t'), [])
mod.add_function('euphoria_Set_EffectDescEuphoricSource', None, [param('int64_t', 'val')])
mod.add_function('euphoria_EffectDescUltimateEarly', retval('int64_t'), [])
mod.add_function('euphoria_Set_EffectDescUltimateEarly', None, [param('int64_t', 'val')])
mod.add_function('euphoria_SkillAmpleness', retval('int64_t'), [])
mod.add_function('euphoria_Set_SkillAmpleness', None, [param('int64_t', 'val')])
mod.add_function('euphoria_SkillEuphoria', retval('int64_t'), [])
mod.add_function('euphoria_Set_SkillEuphoria', None, [param('int64_t', 'val')])
mod.add_function('euphoria_SkillExuberance', retval('int64_t'), [])
mod.add_function('euphoria_Set_SkillExuberance', None, [param('int64_t', 'val')])
mod.add_function('euphoria_SkillPinkSphere', retval('int64_t'), [])
mod.add_function('euphoria_Set_SkillPinkSphere', None, [param('int64_t', 'val')])
mod.add_function('euphoria_EffectEuphoricHeal_CTor', retval('int64_t'), [])
add_checked_function(mod, 'euphoria_EffectEuphoricHeal_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectEuphoricHeal_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectEuphoricHeal_OnTurnEnd', None, [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('bool', 'goRun')])
mod.add_function('euphoria_EffectEuphoricSource_CTor', retval('int64_t'), [])
add_checked_function(mod, 'euphoria_EffectEuphoricSource_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectEuphoricSource_Clone', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('euphoria_EffectUltimateEarly_CTor', retval('int64_t'), [])
add_checked_function(mod, 'euphoria_EffectUltimateEarly_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectUltimateEarly_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectUltimateEarly_Amount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'euphoria_EffectUltimateEarly_Increase', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'euphoria_EffectUltimateEarly_ModifySkillUnlockTurn', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 's'), param('int64_t', 'unlockTurn')])
add_checked_function(mod, 'euphoria_NewEffectEuphoricSource', retval('int64_t'), [param('int64_t', 'amount')])
add_checked_function(mod, 'euphoria_NewEffectUltimateEarly', retval('int64_t'), [])
mod.add_function('milana_CharacterMilana', retval('int64_t'), [])
mod.add_function('milana_Set_CharacterMilana', None, [param('int64_t', 'val')])
mod.add_function('milana_EffectDescMintMist', retval('int64_t'), [])
mod.add_function('milana_Set_EffectDescMintMist', None, [param('int64_t', 'val')])
mod.add_function('milana_EffectDescStolenHP', retval('int64_t'), [])
mod.add_function('milana_Set_EffectDescStolenHP', None, [param('int64_t', 'val')])
mod.add_function('milana_SkillComposure', retval('int64_t'), [])
mod.add_function('milana_Set_SkillComposure', None, [param('int64_t', 'val')])
mod.add_function('milana_SkillMintMist', retval('int64_t'), [])
mod.add_function('milana_Set_SkillMintMist', None, [param('int64_t', 'val')])
mod.add_function('milana_SkillPride', retval('int64_t'), [])
mod.add_function('milana_Set_SkillPride', None, [param('int64_t', 'val')])
mod.add_function('milana_SkillRoyalMove', retval('int64_t'), [])
mod.add_function('milana_Set_SkillRoyalMove', None, [param('int64_t', 'val')])
mod.add_function('milana_EffectMintMist_CTor', retval('int64_t'), [])
add_checked_function(mod, 'milana_EffectMintMist_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'milana_EffectMintMist_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'milana_EffectMintMist_IsEffectAllowed', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'eff')])
mod.add_function('milana_EffectStolenHP_CTor', retval('int64_t'), [])
add_checked_function(mod, 'milana_EffectStolenHP_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'milana_EffectStolenHP_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'milana_NewEffectMintMist', retval('int64_t'), [param('int64_t', 'turnState')])
add_checked_function(mod, 'milana_NewEffectStolenHP', retval('int64_t'), [param('int64_t', 'amount')])
mod.add_function('ruby_CharacterRuby', retval('int64_t'), [])
mod.add_function('ruby_Set_CharacterRuby', None, [param('int64_t', 'val')])
mod.add_function('ruby_EffectDescCannotHeal', retval('int64_t'), [])
mod.add_function('ruby_Set_EffectDescCannotHeal', None, [param('int64_t', 'val')])
mod.add_function('ruby_EffectDescDoubleDamage', retval('int64_t'), [])
mod.add_function('ruby_Set_EffectDescDoubleDamage', None, [param('int64_t', 'val')])
mod.add_function('ruby_SkillDance', retval('int64_t'), [])
mod.add_function('ruby_Set_SkillDance', None, [param('int64_t', 'val')])
mod.add_function('ruby_SkillExecute', retval('int64_t'), [])
mod.add_function('ruby_Set_SkillExecute', None, [param('int64_t', 'val')])
mod.add_function('ruby_SkillRage', retval('int64_t'), [])
mod.add_function('ruby_Set_SkillRage', None, [param('int64_t', 'val')])
mod.add_function('ruby_SkillStop', retval('int64_t'), [])
mod.add_function('ruby_Set_SkillStop', None, [param('int64_t', 'val')])
mod.add_function('ruby_EffectCannotHeal_CTor', retval('int64_t'), [])
add_checked_function(mod, 'ruby_EffectCannotHeal_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ruby_EffectCannotHeal_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ruby_EffectCannotHeal_IsHealAllowed', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'heal')])
mod.add_function('ruby_EffectDoubleDamage_CTor', retval('int64_t'), [])
add_checked_function(mod, 'ruby_EffectDoubleDamage_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ruby_EffectDoubleDamage_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'ruby_EffectDoubleDamage_ModifyDealtDamage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'ruby_NewEffectCannotHeal', retval('int64_t'), [param('int64_t', 'turnState'), param('bool', 'isOpp')])
add_checked_function(mod, 'ruby_NewEffectDoubleDamage', retval('int64_t'), [param('int64_t', 'turnState')])
mod.add_function('speed_CharacterSpeed', retval('int64_t'), [])
mod.add_function('speed_Set_CharacterSpeed', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectDescBlackTokens', retval('int64_t'), [])
mod.add_function('speed_Set_EffectDescBlackTokens', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectDescDamageReduced', retval('int64_t'), [])
mod.add_function('speed_Set_EffectDescDamageReduced', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectDescDefenceReduced', retval('int64_t'), [])
mod.add_function('speed_Set_EffectDescDefenceReduced', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectDescGreenTokens', retval('int64_t'), [])
mod.add_function('speed_Set_EffectDescGreenTokens', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectDescSpedUp', retval('int64_t'), [])
mod.add_function('speed_Set_EffectDescSpedUp', None, [param('int64_t', 'val')])
mod.add_function('speed_SkillRun', retval('int64_t'), [])
mod.add_function('speed_Set_SkillRun', None, [param('int64_t', 'val')])
mod.add_function('speed_SkillSpeed', retval('int64_t'), [])
mod.add_function('speed_Set_SkillSpeed', None, [param('int64_t', 'val')])
mod.add_function('speed_SkillStab', retval('int64_t'), [])
mod.add_function('speed_Set_SkillStab', None, [param('int64_t', 'val')])
mod.add_function('speed_SkillWeaken', retval('int64_t'), [])
mod.add_function('speed_Set_SkillWeaken', None, [param('int64_t', 'val')])
mod.add_function('speed_EffectBlackTokens_CTor', retval('int64_t'), [])
add_checked_function(mod, 'speed_EffectBlackTokens_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectBlackTokens_Clone', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('speed_EffectDamageReduced_CTor', retval('int64_t'), [])
add_checked_function(mod, 'speed_EffectDamageReduced_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectDamageReduced_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectDamageReduced_Amount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectDamageReduced_Increase', None, [param('int64_t', '_handle'), param('int64_t', 'amount'), param('bool', 'goRun')])
add_checked_function(mod, 'speed_EffectDamageReduced_ModifyTakenDamage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'speed_EffectDamageReduced_HasExpired', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
mod.add_function('speed_EffectDefenceReduced_CTor', retval('int64_t'), [])
add_checked_function(mod, 'speed_EffectDefenceReduced_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectDefenceReduced_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectDefenceReduced_ModifyDefences', None, [param('int64_t', '_handle'), param('int64_t', 'mydef'), param('bool', 'goRun')])
mod.add_function('speed_EffectGreenTokens_CTor', retval('int64_t'), [])
add_checked_function(mod, 'speed_EffectGreenTokens_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectGreenTokens_Clone', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('speed_EffectSpedUp_CTor', retval('int64_t'), [])
add_checked_function(mod, 'speed_EffectSpedUp_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectSpedUp_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectSpedUp_SkillsPerTurn', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'speed_EffectSpedUp_IsSkillAvailable', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 's')])
add_checked_function(mod, 'speed_NewEffectBlackTokens', retval('int64_t'), [param('int64_t', 'number')])
add_checked_function(mod, 'speed_NewEffectDamageReduced', retval('int64_t'), [param('int64_t', 'amount')])
add_checked_function(mod, 'speed_NewEffectGreenTokens', retval('int64_t'), [param('int64_t', 'number')])
add_checked_function(mod, 'speed_NewEffectSpedUp', retval('int64_t'), [param('int64_t', 'turnState')])
mod.add_function('storyteller_CharacterStoryteller', retval('int64_t'), [])
mod.add_function('storyteller_Set_CharacterStoryteller', None, [param('int64_t', 'val')])
mod.add_function('storyteller_EffectDescCannotUse', retval('int64_t'), [])
mod.add_function('storyteller_Set_EffectDescCannotUse', None, [param('int64_t', 'val')])
mod.add_function('storyteller_EffectDescControlled', retval('int64_t'), [])
mod.add_function('storyteller_Set_EffectDescControlled', None, [param('int64_t', 'val')])
mod.add_function('storyteller_SkillMyStory', retval('int64_t'), [])
mod.add_function('storyteller_Set_SkillMyStory', None, [param('int64_t', 'val')])
mod.add_function('storyteller_SkillYourColour', retval('int64_t'), [])
mod.add_function('storyteller_Set_SkillYourColour', None, [param('int64_t', 'val')])
mod.add_function('storyteller_SkillYourDream', retval('int64_t'), [])
mod.add_function('storyteller_Set_SkillYourDream', None, [param('int64_t', 'val')])
mod.add_function('storyteller_SkillYourNumber', retval('int64_t'), [])
mod.add_function('storyteller_Set_SkillYourNumber', None, [param('int64_t', 'val')])
mod.add_function('storyteller_EffectCannotUse_CTor', retval('int64_t'), [])
add_checked_function(mod, 'storyteller_EffectCannotUse_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_EffectCannotUse_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_EffectCannotUse_Colour', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_EffectCannotUse_IsSkillAvailable', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 's')])
mod.add_function('storyteller_EffectControlled_CTor', retval('int64_t'), [])
add_checked_function(mod, 'storyteller_EffectControlled_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_EffectControlled_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_EffectControlled_HasTakenControl', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'storyteller_NewEffectCannotUse', retval('int64_t'), [param('int64_t', 'turnState'), param('int64_t', 'colour')])
add_checked_function(mod, 'storyteller_NewEffectControlled', retval('int64_t'), [param('int64_t', 'turnState')])
mod.add_function('structure_CharacterStructure', retval('int64_t'), [])
mod.add_function('structure_Set_CharacterStructure', None, [param('int64_t', 'val')])
mod.add_function('structure_EffectDescIBoost', retval('int64_t'), [])
mod.add_function('structure_Set_EffectDescIBoost', None, [param('int64_t', 'val')])
mod.add_function('structure_EffectDescLastChance', retval('int64_t'), [])
mod.add_function('structure_Set_EffectDescLastChance', None, [param('int64_t', 'val')])
mod.add_function('structure_EffectDescSLayers', retval('int64_t'), [])
mod.add_function('structure_Set_EffectDescSLayers', None, [param('int64_t', 'val')])
mod.add_function('structure_SkillEShock', retval('int64_t'), [])
mod.add_function('structure_Set_SkillEShock', None, [param('int64_t', 'val')])
mod.add_function('structure_SkillIBoost', retval('int64_t'), [])
mod.add_function('structure_Set_SkillIBoost', None, [param('int64_t', 'val')])
mod.add_function('structure_SkillLastChance', retval('int64_t'), [])
mod.add_function('structure_Set_SkillLastChance', None, [param('int64_t', 'val')])
mod.add_function('structure_SkillSLayers', retval('int64_t'), [])
mod.add_function('structure_Set_SkillSLayers', None, [param('int64_t', 'val')])
mod.add_function('structure_EffectIBoost_CTor', retval('int64_t'), [])
add_checked_function(mod, 'structure_EffectIBoost_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectIBoost_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectIBoost_Amount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectIBoost_Increase', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
mod.add_function('structure_EffectLastChance_CTor', retval('int64_t'), [])
add_checked_function(mod, 'structure_EffectLastChance_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectLastChance_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectLastChance_OnTurnEnd', None, [param('int64_t', '_handle'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('bool', 'goRun')])
mod.add_function('structure_EffectSLayers_CTor', retval('int64_t'), [])
add_checked_function(mod, 'structure_EffectSLayers_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectSLayers_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectSLayers_Threshold', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'structure_EffectSLayers_ModifyTakenDamage', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'dmg'), param('int64_t', 'colour')])
add_checked_function(mod, 'structure_NewEffectIBoost', retval('int64_t'), [param('int64_t', 'amount')])
add_checked_function(mod, 'structure_NewEffectLastChance', retval('int64_t'), [param('int64_t', 'turnState')])
add_checked_function(mod, 'structure_NewEffectSLayers', retval('int64_t'), [param('int64_t', 'turnState'), param('int64_t', 'threshold')])
mod.add_function('z89_CharacterZ89', retval('int64_t'), [])
mod.add_function('z89_Set_CharacterZ89', None, [param('int64_t', 'val')])
mod.add_function('z89_EffectDescUltimateSlow', retval('int64_t'), [])
mod.add_function('z89_Set_EffectDescUltimateSlow', None, [param('int64_t', 'val')])
mod.add_function('z89_SkillDespondency', retval('int64_t'), [])
mod.add_function('z89_Set_SkillDespondency', None, [param('int64_t', 'val')])
mod.add_function('z89_SkillGreenSphere', retval('int64_t'), [])
mod.add_function('z89_Set_SkillGreenSphere', None, [param('int64_t', 'val')])
mod.add_function('z89_SkillIndifference', retval('int64_t'), [])
mod.add_function('z89_Set_SkillIndifference', None, [param('int64_t', 'val')])
mod.add_function('z89_SkillScarcity', retval('int64_t'), [])
mod.add_function('z89_Set_SkillScarcity', None, [param('int64_t', 'val')])
mod.add_function('z89_EffectUltimateSlow_CTor', retval('int64_t'), [])
add_checked_function(mod, 'z89_EffectUltimateSlow_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'z89_EffectUltimateSlow_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'z89_EffectUltimateSlow_Amount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'z89_EffectUltimateSlow_Increase', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'z89_EffectUltimateSlow_ModifySkillUnlockTurn', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 's'), param('int64_t', 'unlockTurn')])
add_checked_function(mod, 'z89_NewEffectUltimateSlow', retval('int64_t'), [])
mod.add_function('common_Collectible_CTor', retval('int64_t'), [])
add_checked_function(mod, 'common_Collectible_Amount', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'common_Collectible_Increase', None, [param('int64_t', '_handle'), param('int64_t', 'amount'), param('bool', 'goRun')])
add_checked_function(mod, 'common_Collectible_Decrease', None, [param('int64_t', '_handle'), param('int64_t', 'amount'), param('bool', 'goRun')])
add_checked_function(mod, 'common_Collectible_HasExpired', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
mod.add_function('common_DurationExpirable_CTor', retval('int64_t'), [])
add_checked_function(mod, 'common_DurationExpirable_TurnsLeft', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
add_checked_function(mod, 'common_DurationExpirable_HasExpired', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
add_checked_function(mod, 'common_NewCollectible', retval('int64_t'), [param('int64_t', 'amount')])
add_checked_function(mod, 'common_NewDurationExpirable', retval('int64_t'), [param('int64_t', 'expCtx')])
mod.add_function('gametest_EffectDescExpirable', retval('int64_t'), [])
mod.add_function('gametest_Set_EffectDescExpirable', None, [param('int64_t', 'val')])
mod.add_function('gametest_EffectExpirable_CTor', retval('int64_t'), [])
add_checked_function(mod, 'gametest_EffectExpirable_Desc', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gametest_EffectExpirable_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gametest_EffectExpirable_Expire', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'gametest_EffectExpirable_HasExpired', retval('bool'), [param('int64_t', '_handle'), param('int64_t', 'turnState')])
add_checked_function(mod, 'gametest_NewEffectExpirable', retval('int64_t'), [param('bool', 'expired')])
mod.add_function('Slice_game_TurnState_CTor', retval('int64_t'), [])
mod.add_function('Slice_game_TurnState_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_game_TurnState_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_game_TurnState_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_game_TurnState_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_game_TurnState_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
add_checked_function(mod, 'match_Player_RequestSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'match_Player_SendEnd', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'match_Player_SendError', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('char*', 'err')])
add_checked_function(mod, 'match_Player_SendState', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'state')])
mod.add_function('match_CharacterPlayer_CTor', retval('int64_t'), [])
mod.add_function('match_CharacterPlayer_Character_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_CharacterPlayer_Character_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_CharacterPlayer_Player_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_CharacterPlayer_Player_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_CTor', retval('int64_t'), [])
mod.add_function('match_GameState_Character_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_Character_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_Opponent_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_Opponent_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_TurnState_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_TurnState_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_SkillsLeft_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_SkillsLeft_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_SkillLog_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_SkillLog_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('match_GameState_PlayerTurn_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_PlayerTurn_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('match_GameState_AsOpp_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('match_GameState_AsOpp_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
add_checked_function(mod, 'match_GameState_IsEnd', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'match_GameState_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'match_GameState_CloneWithSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'i')])
mod.add_function('match_Match_CTor', retval('int64_t'), [])
add_checked_function(mod, 'match_Match_Run', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'match_Match_Result', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('match_SkillLog_CTor', retval('int64_t'), [])
mod.add_function('match_SkillLog_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('match_SkillLog_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('match_SkillLog_contains', retval('bool'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('match_SkillLog_set', None, [param('int64_t', 'handle'), param('int64_t', 'key'), param('int64_t', 'value')])
mod.add_function('match_SkillLog_delete', None, [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('match_SkillLog_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_function(mod, 'match_SkillLog_Clone', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'match_SkillLog_Append', None, [param('int64_t', '_handle'), param('int64_t', 'turn'), param('int64_t', 'skill'), param('bool', 'goRun')])
add_checked_function(mod, 'match_New', retval('int64_t'), [param('int64_t', 'p1'), param('int64_t', 'p2'), param('bool', 'invertedOrder')])
mod.add_function('bot_RevAdapter_CTor', retval('int64_t'), [])
add_checked_function(mod, 'bot_RevAdapter_GetStateInit', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'bot_RevAdapter_GetState', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'skill')])
add_checked_function(mod, 'bot_RevAdapter_SendState', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'state')])
add_checked_function(mod, 'bot_RevAdapter_SendError', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('char*', 'err')])
add_checked_function(mod, 'bot_RevAdapter_SendEnd', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'bot_RevAdapter_RequestSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
mod.add_function('bot_RandomBot_CTor', retval('int64_t'), [])
add_checked_function(mod, 'bot_RandomBot_SendState', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'state')])
add_checked_function(mod, 'bot_RandomBot_SendError', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('char*', 'err')])
add_checked_function(mod, 'bot_RandomBot_SendEnd', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'bot_RandomBot_RequestSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'bot_NewAdapter', retval('int64_t'), [])
mod.add_function('Slice_minimax_Entry_CTor', retval('int64_t'), [])
mod.add_function('Slice_minimax_Entry_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_minimax_Entry_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_minimax_Entry_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_minimax_Entry_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_minimax_Entry_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('minimax_MemOptConcurrentRunner', retval('int64_t'), [])
mod.add_function('minimax_Set_MemOptConcurrentRunner', None, [param('int64_t', 'val')])
mod.add_function('minimax_SequentialRunner', retval('int64_t'), [])
mod.add_function('minimax_Set_SequentialRunner', None, [param('int64_t', 'val')])
mod.add_function('minimax_TimeOptConcurrentRunner', retval('int64_t'), [])
mod.add_function('minimax_Set_TimeOptConcurrentRunner', None, [param('int64_t', 'val')])
mod.add_function('minimax_Bot_CTor', retval('int64_t'), [])
add_checked_function(mod, 'minimax_Bot_SendState', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'state')])
add_checked_function(mod, 'minimax_Bot_SendError', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('char*', 'err')])
add_checked_function(mod, 'minimax_Bot_SendEnd', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'minimax_Bot_RequestSkill', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
mod.add_function('minimax_Entry_CTor', retval('int64_t'), [])
mod.add_function('minimax_Entry_State_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Entry_State_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Entry_Result_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Entry_Result_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Result_CTor', retval('int64_t'), [])
mod.add_function('minimax_Result_Score_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Result_Score_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Result_Strategy_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Result_Strategy_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Result_Entries_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Result_Entries_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Runner_CTor', retval('int64_t'), [])
mod.add_function('minimax_Runner_MinConcDepth_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Runner_MinConcDepth_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('minimax_Runner_MaxConcDepth_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('minimax_Runner_MaxConcDepth_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'minimax_Runner_MiniMax', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'state'), param('int64_t', 'depth')])
add_checked_function(mod, 'minimax_NewBot', retval('int64_t'), [param('int64_t', 'runner'), param('int64_t', 'depth')])
mod.add_function('Map_string_any_CTor', retval('int64_t'), [])
mod.add_function('Map_string_any_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_any_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_any_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_any_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_any_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_any_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_function(mod, 'ml_Format_Row', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'state')])
add_checked_function(mod, 'ml_ExportDataset', retval('char*'), [param('int64_t', 'out'), param('int64_t', 'data'), param('int64_t', 'format')])
mod.add_function('formats_FullStateFormat_CTor', retval('int64_t'), [])
add_checked_function(mod, 'formats_FullStateFormat_Row', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'state')])
mod.add_function('formats_PrevMovesFormat_CTor', retval('int64_t'), [])
add_checked_function(mod, 'formats_PrevMovesFormat_Row', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'state')])
add_checked_function(mod, 'formats_GetMapState', retval('int64_t'), [param('int64_t', 'myin')])
add_checked_function(mod, 'formats_UpdateMapChar', None, [param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('int64_t', 'm'), param('char*', 'prefix'), param('bool', 'goRun')])
add_checked_function(mod, 'formats_UpdateMapDefence', None, [param('int64_t', 'mydef'), param('int64_t', 'm'), param('char*', 'prefix'), param('bool', 'goRun')])
add_checked_function(mod, 'formats_UpdateMapEffects', None, [param('int64_t', 'c'), param('int64_t', 'turnState'), param('int64_t', 'm'), param('char*', 'prefix'), param('bool', 'goRun')])
add_checked_function(mod, 'formats_UpdateMapSkill', None, [param('int64_t', 's'), param('int64_t', 'c'), param('int64_t', 'opp'), param('int64_t', 'turnState'), param('int64_t', 'm'), param('char*', 'prefix'), param('bool', 'goRun')])
add_checked_function(mod, 'context_Context_Err', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'context_Context_Value', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'key')])
add_checked_function(mod, 'context_WithoutCancel', retval('int64_t'), [param('int64_t', 'parent')])
add_checked_function(mod, 'context_Background', retval('int64_t'), [])
add_checked_function(mod, 'context_Cause', retval('char*'), [param('int64_t', 'c')])
add_checked_function(mod, 'context_TODO', retval('int64_t'), [])
add_checked_function(mod, 'context_WithValue', retval('int64_t'), [param('int64_t', 'parent'), param('int64_t', 'key'), param('int64_t', 'val')])
mod.add_function('Array_2_uintptr_CTor', retval('int64_t'), [])
mod.add_function('Array_2_uintptr_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_2_uintptr_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_2_uintptr_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_reflect_Value_CTor', retval('int64_t'), [])
mod.add_function('Slice_reflect_Value_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_reflect_Value_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_reflect_Value_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_reflect_Value_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_reflect_Value_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
add_checked_function(mod, 'json_Marshaler_MarshalJSON', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_Unmarshaler_UnmarshalJSON', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'arg_0')])
mod.add_function('json_InvalidUTF8Error_CTor', retval('int64_t'), [])
mod.add_function('json_InvalidUTF8Error_S_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_InvalidUTF8Error_S_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'json_InvalidUTF8Error_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_MarshalerError_CTor', retval('int64_t'), [])
mod.add_function('json_MarshalerError_Type_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_MarshalerError_Type_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'json_MarshalerError_Error', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_MarshalerError_Unwrap', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_SyntaxError_CTor', retval('int64_t'), [])
mod.add_function('json_SyntaxError_Offset_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_SyntaxError_Offset_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'json_SyntaxError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_UnsupportedTypeError_CTor', retval('int64_t'), [])
mod.add_function('json_UnsupportedTypeError_Type_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnsupportedTypeError_Type_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'json_UnsupportedTypeError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_UnsupportedValueError_CTor', retval('int64_t'), [])
mod.add_function('json_UnsupportedValueError_Value_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnsupportedValueError_Value_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('json_UnsupportedValueError_Str_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_UnsupportedValueError_Str_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'json_UnsupportedValueError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_Decoder_CTor', retval('int64_t'), [])
add_checked_function(mod, 'json_Decoder_UseNumber', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'json_Decoder_DisallowUnknownFields', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'json_Decoder_Decode', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'v')])
add_checked_function(mod, 'json_Decoder_Buffered', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_Decoder_Token', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_Decoder_More', retval('bool'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_Decoder_InputOffset', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('json_Encoder_CTor', retval('int64_t'), [])
add_checked_function(mod, 'json_Encoder_Encode', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'v')])
add_checked_function(mod, 'json_Encoder_SetIndent', None, [param('int64_t', '_handle'), param('char*', 'prefix'), param('char*', 'indent'), param('bool', 'goRun')])
add_checked_function(mod, 'json_Encoder_SetEscapeHTML', None, [param('int64_t', '_handle'), param('bool', 'on'), param('bool', 'goRun')])
mod.add_function('json_UnmarshalTypeError_CTor', retval('int64_t'), [])
mod.add_function('json_UnmarshalTypeError_Value_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalTypeError_Value_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('json_UnmarshalTypeError_Type_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalTypeError_Type_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('json_UnmarshalTypeError_Offset_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalTypeError_Offset_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('json_UnmarshalTypeError_Struct_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalTypeError_Struct_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('json_UnmarshalTypeError_Field_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalTypeError_Field_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_string_function(mod, 'json_UnmarshalTypeError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_InvalidUnmarshalError_CTor', retval('int64_t'), [])
mod.add_function('json_InvalidUnmarshalError_Type_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_InvalidUnmarshalError_Type_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'json_InvalidUnmarshalError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_UnmarshalFieldError_CTor', retval('int64_t'), [])
mod.add_function('json_UnmarshalFieldError_Key_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalFieldError_Key_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('json_UnmarshalFieldError_Type_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalFieldError_Type_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('json_UnmarshalFieldError_Field_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('json_UnmarshalFieldError_Field_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'json_UnmarshalFieldError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('json_RawMessage_CTor', retval('int64_t'), [])
mod.add_function('json_RawMessage_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('json_RawMessage_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('json_RawMessage_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('json_RawMessage_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('json_RawMessage_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
add_checked_function(mod, 'json_RawMessage_MarshalJSON', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'json_RawMessage_UnmarshalJSON', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
add_checked_function(mod, 'json_NewDecoder', retval('int64_t'), [param('int64_t', 'r')])
add_checked_function(mod, 'json_NewEncoder', retval('int64_t'), [param('int64_t', 'w')])
add_checked_function(mod, 'json_Valid', retval('bool'), [param('int64_t', 'data')])
add_checked_function(mod, 'json_Compact', retval('char*'), [param('int64_t', 'dst'), param('int64_t', 'src')])
add_checked_function(mod, 'json_MarshalIndent', retval('int64_t'), [param('int64_t', 'v'), param('char*', 'prefix'), param('char*', 'indent')])
add_checked_function(mod, 'json_Marshal', retval('int64_t'), [param('int64_t', 'v')])
add_checked_function(mod, 'json_Unmarshal', retval('char*'), [param('int64_t', 'data'), param('int64_t', 'v')])
add_checked_function(mod, 'json_HTMLEscape', None, [param('int64_t', 'dst'), param('int64_t', 'src'), param('bool', 'goRun')])
add_checked_function(mod, 'json_Indent', retval('char*'), [param('int64_t', 'dst'), param('int64_t', 'src'), param('char*', 'prefix'), param('char*', 'indent')])

mod.generate(open('game.c', 'w'))

