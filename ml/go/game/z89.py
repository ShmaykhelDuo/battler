
# python wrapper for package github.com/ShmaykhelDuo/battler/internal/game/characters/z89 within overall package game
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy pkg -exclude=model,ml1,ml2,moveml ../../internal/game ../../internal/bot context encoding/json

# the following is required to enable dlopen to open the _go.so file
import os,sys,inspect,collections
try:
	import collections.abc as _collections_abc
except ImportError:
	_collections_abc = collections

cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
from . import _game
from . import go

os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# from game import z89
# and then refer to everything using z89. prefix
# packages imported by this package listed below:

from . import game



# ---- Types ---


#---- Enums from Go (collections of consts with same type) ---


#---- Constants from Go: Python can only ask that you please don't change these! ---
SkillDespondencyIndex = 3
SkillGreenSphereIndex = 2
SkillIndifferenceIndex = 1
SkillScarcityIndex = 0


# ---- Global Variables: can only use functions to access ---
def CharacterZ89():
	"""
	CharacterZ89 Gets Go Variable: z89.CharacterZ89
	
	"""
	return game.CharacterData(handle=_game.z89_CharacterZ89())

def Set_CharacterZ89(value):
	"""
	Set_CharacterZ89 Sets Go Variable: z89.CharacterZ89
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_CharacterZ89(value.handle)
	else:
		_game.z89_Set_CharacterZ89(value)

def EffectDescUltimateSlow():
	"""
	EffectDescUltimateSlow Gets Go Variable: z89.EffectDescUltimateSlow
	EffectDescUltimateSlow is a description of [EffectUltimateSlow]
	
	"""
	return game.EffectDescription(handle=_game.z89_EffectDescUltimateSlow())

def Set_EffectDescUltimateSlow(value):
	"""
	Set_EffectDescUltimateSlow Sets Go Variable: z89.EffectDescUltimateSlow
	EffectDescUltimateSlow is a description of [EffectUltimateSlow]
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_EffectDescUltimateSlow(value.handle)
	else:
		_game.z89_Set_EffectDescUltimateSlow(value)

def SkillDespondency():
	"""
	SkillDespondency Gets Go Variable: z89.SkillDespondency
	Deal 40 - (opponent's max HP - 70) Blue damage.
	Unlocks on turn 9.
	
	"""
	return game.SkillData(handle=_game.z89_SkillDespondency())

def Set_SkillDespondency(value):
	"""
	Set_SkillDespondency Sets Go Variable: z89.SkillDespondency
	Deal 40 - (opponent's max HP - 70) Blue damage.
	Unlocks on turn 9.
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_SkillDespondency(value.handle)
	else:
		_game.z89_Set_SkillDespondency(value)

def SkillGreenSphere():
	"""
	SkillGreenSphere Gets Go Variable: z89.SkillGreenSphere
	Deal 15 - (opponent's max HP - opponent's current HP) green damage.
	
	"""
	return game.SkillData(handle=_game.z89_SkillGreenSphere())

def Set_SkillGreenSphere(value):
	"""
	Set_SkillGreenSphere Sets Go Variable: z89.SkillGreenSphere
	Deal 15 - (opponent's max HP - opponent's current HP) green damage.
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_SkillGreenSphere(value.handle)
	else:
		_game.z89_Set_SkillGreenSphere(value)

def SkillIndifference():
	"""
	SkillIndifference Gets Go Variable: z89.SkillIndifference
	If opponent's ultimate is not available yet, delay it for 1 turn.
	Can't be delayed later than their 10th turn.
	Cooldown 2.
	Unlocks on turn 2.
	
	"""
	return game.SkillData(handle=_game.z89_SkillIndifference())

def Set_SkillIndifference(value):
	"""
	Set_SkillIndifference Sets Go Variable: z89.SkillIndifference
	If opponent's ultimate is not available yet, delay it for 1 turn.
	Can't be delayed later than their 10th turn.
	Cooldown 2.
	Unlocks on turn 2.
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_SkillIndifference(value.handle)
	else:
		_game.z89_Set_SkillIndifference(value)

def SkillScarcity():
	"""
	SkillScarcity Gets Go Variable: z89.SkillScarcity
	Deal 12 Black damage, then set opponent's max HP to their current HP.
	Cooldown 1.
	
	"""
	return game.SkillData(handle=_game.z89_SkillScarcity())

def Set_SkillScarcity(value):
	"""
	Set_SkillScarcity Sets Go Variable: z89.SkillScarcity
	Deal 12 Black damage, then set opponent's max HP to their current HP.
	Cooldown 1.
	
	"""
	if isinstance(value, go.GoClass):
		_game.z89_Set_SkillScarcity(value.handle)
	else:
		_game.z89_Set_SkillScarcity(value)



# ---- Interfaces ---


# ---- Structs ---

# Python type for struct z89.EffectUltimateSlow
class EffectUltimateSlow(go.GoClass):
	"""Your ultimate will unlock this many turns later than normal.\n"""
	def __init__(self, *args, **kwargs):
		"""
		handle=A Go-side object is always initialized with an explicit handle=arg
		otherwise parameters can be unnamed in order of field names or named fields
		in which case a new Go object is constructed first
		"""
		if len(kwargs) == 1 and 'handle' in kwargs:
			self.handle = kwargs['handle']
			_game.IncRef(self.handle)
		elif len(args) == 1 and isinstance(args[0], go.GoClass):
			self.handle = args[0].handle
			_game.IncRef(self.handle)
		else:
			self.handle = _game.z89_EffectUltimateSlow_CTor()
			_game.IncRef(self.handle)
	def __del__(self):
		_game.DecRef(self.handle)
	def __str__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'z89.EffectUltimateSlow{'
		first = True
		for v in pr:
			if callable(v[1]):
				continue
			if first:
				first = False
			else:
				sv += ', '
			sv += v[0] + '=' + str(v[1])
		return sv + '}'
	def __repr__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'z89.EffectUltimateSlow ( '
		for v in pr:
			if not callable(v[1]):
				sv += v[0] + '=' + str(v[1]) + ', '
		return sv + ')'
	def Desc(self):
		"""Desc() object
		
		Desc returns the effect's description.
		"""
		return game.EffectDescription(handle=_game.z89_EffectUltimateSlow_Desc(self.handle))
	def Clone(self):
		"""Clone() object
		
		Clone returns a clone of the effect.
		"""
		return game.Effect(handle=_game.z89_EffectUltimateSlow_Clone(self.handle))
	def Amount(self):
		"""Amount() int
		
		Amount returns the amount of delay.
		"""
		return _game.z89_EffectUltimateSlow_Amount(self.handle)
	def Increase(self, goRun=False):
		"""Increase() 
		
		Increase increments the amount of delay.
		"""
		_game.z89_EffectUltimateSlow_Increase(self.handle, goRun)
	def ModifySkillUnlockTurn(self, s, unlockTurn):
		"""ModifySkillUnlockTurn(object s, int unlockTurn) int
		
		ModifySkillUnlockTurn returns the modified turn number when skill is to be unlocked.
		"""
		return _game.z89_EffectUltimateSlow_ModifySkillUnlockTurn(self.handle, s.handle, unlockTurn)


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---
def NewEffectUltimateSlow():
	"""NewEffectUltimateSlow() object
	
	NewEffectUltimateSlow returns a new [EffectUltimateSlow] with the delay amount of 1.
	"""
	return EffectUltimateSlow(handle=_game.z89_NewEffectUltimateSlow())


# ---- Functions ---


