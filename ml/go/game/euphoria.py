
# python wrapper for package github.com/ShmaykhelDuo/battler/internal/game/characters/euphoria within overall package game
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy pkg -exclude=model,ml1,ml2,moveml ../../internal/game ../../internal/bot context encoding/json

# the following is required to enable dlopen to open the _go.so file
import os,sys,inspect,collections
try:
	import collections.abc as _collections_abc
except ImportError:
	_collections_abc = collections

cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
from . import _game
from . import go

os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# from game import euphoria
# and then refer to everything using euphoria. prefix
# packages imported by this package listed below:

from . import common
from . import game



# ---- Types ---


#---- Enums from Go (collections of consts with same type) ---


#---- Constants from Go: Python can only ask that you please don't change these! ---
SkillAmplenessIndex = 0
SkillEuphoriaIndex = 3
SkillExuberanceIndex = 1
SkillPinkSphereIndex = 2


# ---- Global Variables: can only use functions to access ---
def CharacterEuphoria():
	"""
	CharacterEuphoria Gets Go Variable: euphoria.CharacterEuphoria
	
	"""
	return game.CharacterData(handle=_game.euphoria_CharacterEuphoria())

def Set_CharacterEuphoria(value):
	"""
	Set_CharacterEuphoria Sets Go Variable: euphoria.CharacterEuphoria
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_CharacterEuphoria(value.handle)
	else:
		_game.euphoria_Set_CharacterEuphoria(value)

def EffectDescEuphoricHeal():
	"""
	EffectDescEuphoricHeal Gets Go Variable: euphoria.EffectDescEuphoricHeal
	
	"""
	return game.EffectDescription(handle=_game.euphoria_EffectDescEuphoricHeal())

def Set_EffectDescEuphoricHeal(value):
	"""
	Set_EffectDescEuphoricHeal Sets Go Variable: euphoria.EffectDescEuphoricHeal
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_EffectDescEuphoricHeal(value.handle)
	else:
		_game.euphoria_Set_EffectDescEuphoricHeal(value)

def EffectDescEuphoricSource():
	"""
	EffectDescEuphoricSource Gets Go Variable: euphoria.EffectDescEuphoricSource
	EffectDescEuphoricSource is a description of [EffectEuphoricSource]
	
	"""
	return game.EffectDescription(handle=_game.euphoria_EffectDescEuphoricSource())

def Set_EffectDescEuphoricSource(value):
	"""
	Set_EffectDescEuphoricSource Sets Go Variable: euphoria.EffectDescEuphoricSource
	EffectDescEuphoricSource is a description of [EffectEuphoricSource]
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_EffectDescEuphoricSource(value.handle)
	else:
		_game.euphoria_Set_EffectDescEuphoricSource(value)

def EffectDescUltimateEarly():
	"""
	EffectDescUltimateEarly Gets Go Variable: euphoria.EffectDescUltimateEarly
	EffectDescUltimateEarly is a description of [EffectUltimateEarly]
	
	"""
	return game.EffectDescription(handle=_game.euphoria_EffectDescUltimateEarly())

def Set_EffectDescUltimateEarly(value):
	"""
	Set_EffectDescUltimateEarly Sets Go Variable: euphoria.EffectDescUltimateEarly
	EffectDescUltimateEarly is a description of [EffectUltimateEarly]
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_EffectDescUltimateEarly(value.handle)
	else:
		_game.euphoria_Set_EffectDescUltimateEarly(value)

def SkillAmpleness():
	"""
	SkillAmpleness Gets Go Variable: euphoria.SkillAmpleness
	Increases Euphoric Source and everyone's max HP by 12.
	Cooldown: 1.
	
	"""
	return game.SkillData(handle=_game.euphoria_SkillAmpleness())

def Set_SkillAmpleness(value):
	"""
	Set_SkillAmpleness Sets Go Variable: euphoria.SkillAmpleness
	Increases Euphoric Source and everyone's max HP by 12.
	Cooldown: 1.
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_SkillAmpleness(value.handle)
	else:
		_game.euphoria_Set_SkillAmpleness(value)

def SkillEuphoria():
	"""
	SkillEuphoria Gets Go Variable: euphoria.SkillEuphoria
	Heal everyone by the amount in Euphoric Source at the end each turn.
	Every turn, Source gets depleted by 9. Lasts until the end of the game.
	Starting turn: 4.
	
	"""
	return game.SkillData(handle=_game.euphoria_SkillEuphoria())

def Set_SkillEuphoria(value):
	"""
	Set_SkillEuphoria Sets Go Variable: euphoria.SkillEuphoria
	Heal everyone by the amount in Euphoric Source at the end each turn.
	Every turn, Source gets depleted by 9. Lasts until the end of the game.
	Starting turn: 4.
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_SkillEuphoria(value.handle)
	else:
		_game.euphoria_Set_SkillEuphoria(value)

def SkillExuberance():
	"""
	SkillExuberance Gets Go Variable: euphoria.SkillExuberance
	If your opponent's ultimate is not unlocked yet, add 10 to Euphoric Source, everyone's max HP and your current HP.
	Also, your opponent's ultimate unlocks 1 turn earlier.
	If it already is unlocked, add 20 instead.
	Cooldown 2.
	
	"""
	return game.SkillData(handle=_game.euphoria_SkillExuberance())

def Set_SkillExuberance(value):
	"""
	Set_SkillExuberance Sets Go Variable: euphoria.SkillExuberance
	If your opponent's ultimate is not unlocked yet, add 10 to Euphoric Source, everyone's max HP and your current HP.
	Also, your opponent's ultimate unlocks 1 turn earlier.
	If it already is unlocked, add 20 instead.
	Cooldown 2.
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_SkillExuberance(value.handle)
	else:
		_game.euphoria_Set_SkillExuberance(value)

def SkillPinkSphere():
	"""
	SkillPinkSphere Gets Go Variable: euphoria.SkillPinkSphere
	Deal 12 Pink damage. Also, increase everyone's max HP by 12.
	
	"""
	return game.SkillData(handle=_game.euphoria_SkillPinkSphere())

def Set_SkillPinkSphere(value):
	"""
	Set_SkillPinkSphere Sets Go Variable: euphoria.SkillPinkSphere
	Deal 12 Pink damage. Also, increase everyone's max HP by 12.
	
	"""
	if isinstance(value, go.GoClass):
		_game.euphoria_Set_SkillPinkSphere(value.handle)
	else:
		_game.euphoria_Set_SkillPinkSphere(value)



# ---- Interfaces ---


# ---- Structs ---

# Python type for struct euphoria.EffectEuphoricHeal
class EffectEuphoricHeal(go.GoClass):
	"""You heal from Euphoric Source at the end of each turn, but Source gets rapidly depleted.\n"""
	def __init__(self, *args, **kwargs):
		"""
		handle=A Go-side object is always initialized with an explicit handle=arg
		otherwise parameters can be unnamed in order of field names or named fields
		in which case a new Go object is constructed first
		"""
		if len(kwargs) == 1 and 'handle' in kwargs:
			self.handle = kwargs['handle']
			_game.IncRef(self.handle)
		elif len(args) == 1 and isinstance(args[0], go.GoClass):
			self.handle = args[0].handle
			_game.IncRef(self.handle)
		else:
			self.handle = _game.euphoria_EffectEuphoricHeal_CTor()
			_game.IncRef(self.handle)
	def __del__(self):
		_game.DecRef(self.handle)
	def __str__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectEuphoricHeal{'
		first = True
		for v in pr:
			if callable(v[1]):
				continue
			if first:
				first = False
			else:
				sv += ', '
			sv += v[0] + '=' + str(v[1])
		return sv + '}'
	def __repr__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectEuphoricHeal ( '
		for v in pr:
			if not callable(v[1]):
				sv += v[0] + '=' + str(v[1]) + ', '
		return sv + ')'
	def Desc(self):
		"""Desc() object
		
		Desc returns the effect's description.
		"""
		return game.EffectDescription(handle=_game.euphoria_EffectEuphoricHeal_Desc(self.handle))
	def Clone(self):
		"""Clone() object
		
		Clone returns a clone of the effect.
		"""
		return game.Effect(handle=_game.euphoria_EffectEuphoricHeal_Clone(self.handle))
	def OnTurnEnd(self, c, opp, turnState, goRun=False):
		"""OnTurnEnd(object c, object opp, object turnState) 
		
		OnTurnEnd executes the end-of-turn action.
		"""
		_game.euphoria_EffectEuphoricHeal_OnTurnEnd(self.handle, c.handle, opp.handle, turnState.handle, goRun)

# Python type for struct euphoria.EffectEuphoricSource
class EffectEuphoricSource(common.Collectible):
	"""Euphoric Source gives your Pink Sphere additional damage as well as well as healing while in Euphoria.\n"""
	def __init__(self, *args, **kwargs):
		"""
		handle=A Go-side object is always initialized with an explicit handle=arg
		otherwise parameters can be unnamed in order of field names or named fields
		in which case a new Go object is constructed first
		"""
		if len(kwargs) == 1 and 'handle' in kwargs:
			self.handle = kwargs['handle']
			_game.IncRef(self.handle)
		elif len(args) == 1 and isinstance(args[0], go.GoClass):
			self.handle = args[0].handle
			_game.IncRef(self.handle)
		else:
			self.handle = _game.euphoria_EffectEuphoricSource_CTor()
			_game.IncRef(self.handle)
	def __del__(self):
		_game.DecRef(self.handle)
	def __str__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectEuphoricSource{'
		first = True
		for v in pr:
			if callable(v[1]):
				continue
			if first:
				first = False
			else:
				sv += ', '
			sv += v[0] + '=' + str(v[1])
		return sv + '}'
	def __repr__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectEuphoricSource ( '
		for v in pr:
			if not callable(v[1]):
				sv += v[0] + '=' + str(v[1]) + ', '
		return sv + ')'
	def Desc(self):
		"""Desc() object
		
		Desc returns the effect's description.
		"""
		return game.EffectDescription(handle=_game.euphoria_EffectEuphoricSource_Desc(self.handle))
	def Clone(self):
		"""Clone() object
		
		Clone returns a clone of the effect.
		"""
		return game.Effect(handle=_game.euphoria_EffectEuphoricSource_Clone(self.handle))

# Python type for struct euphoria.EffectUltimateEarly
class EffectUltimateEarly(go.GoClass):
	"""Your ultimate will unlock this many turns earlier than normal.\n"""
	def __init__(self, *args, **kwargs):
		"""
		handle=A Go-side object is always initialized with an explicit handle=arg
		otherwise parameters can be unnamed in order of field names or named fields
		in which case a new Go object is constructed first
		"""
		if len(kwargs) == 1 and 'handle' in kwargs:
			self.handle = kwargs['handle']
			_game.IncRef(self.handle)
		elif len(args) == 1 and isinstance(args[0], go.GoClass):
			self.handle = args[0].handle
			_game.IncRef(self.handle)
		else:
			self.handle = _game.euphoria_EffectUltimateEarly_CTor()
			_game.IncRef(self.handle)
	def __del__(self):
		_game.DecRef(self.handle)
	def __str__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectUltimateEarly{'
		first = True
		for v in pr:
			if callable(v[1]):
				continue
			if first:
				first = False
			else:
				sv += ', '
			sv += v[0] + '=' + str(v[1])
		return sv + '}'
	def __repr__(self):
		pr = [(p, getattr(self, p)) for p in dir(self) if not p.startswith('__')]
		sv = 'euphoria.EffectUltimateEarly ( '
		for v in pr:
			if not callable(v[1]):
				sv += v[0] + '=' + str(v[1]) + ', '
		return sv + ')'
	def Desc(self):
		"""Desc() object
		
		Desc returns the effect's description.
		"""
		return game.EffectDescription(handle=_game.euphoria_EffectUltimateEarly_Desc(self.handle))
	def Clone(self):
		"""Clone() object
		
		Clone returns a clone of the effect.
		"""
		return game.Effect(handle=_game.euphoria_EffectUltimateEarly_Clone(self.handle))
	def Amount(self):
		"""Amount() int
		
		Amount returns the amount of shift.
		"""
		return _game.euphoria_EffectUltimateEarly_Amount(self.handle)
	def Increase(self, goRun=False):
		"""Increase() 
		
		Increase increases the amount of shift.
		"""
		_game.euphoria_EffectUltimateEarly_Increase(self.handle, goRun)
	def ModifySkillUnlockTurn(self, s, unlockTurn):
		"""ModifySkillUnlockTurn(object s, int unlockTurn) int
		
		ModifySkillUnlockTurn returns the modified turn number when skill is to be unlocked.
		"""
		return _game.euphoria_EffectUltimateEarly_ModifySkillUnlockTurn(self.handle, s.handle, unlockTurn)


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---
def NewEffectEuphoricSource(amount):
	"""NewEffectEuphoricSource(int amount) object
	
	NewEffectEuphoricSource returns a new [EffectEuphoricSource] of provided amount.
	"""
	return EffectEuphoricSource(handle=_game.euphoria_NewEffectEuphoricSource(amount))
def NewEffectUltimateEarly():
	"""NewEffectUltimateEarly() object
	
	NewEffectUltimateEarly returns a new [EffectUltimateEarly].
	"""
	return EffectUltimateEarly(handle=_game.euphoria_NewEffectUltimateEarly())


# ---- Functions ---


